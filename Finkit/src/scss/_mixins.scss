// SCSS миксин для подключения шрифтов
@mixin font($font_name, $file_name, $weight, $style) {
	@font-face {
		font-family: $font_name;
		font-display: swap;
		src: url("../fonts/#{$file_name}.woff") format("woff"),
			url("../fonts/#{$file_name}.woff2") format("woff2");
		font-weight: $weight;
		font-style: $style;
	}
}

// Адаптивный шрифт
@mixin adaptiv-font($pcSize, $mobileSize, $maxSize) {
	$addSize: $pcSize - $mobileSize;

	@if $maxSize==1 {
		//Только если меньше контейнера
		font-size: $pcSize + px;
		@media (max-width: #{$maxWidthContainer + px}) {
			font-size: calc(
				#{$mobileSize + px} + #{$addSize} *
					((100vw - 320px) / #{$maxWidthContainer - 320})
			);
		}

	} @else if $maxSize==2 {
		//Только если больше контейнера
		font-size: $pcSize + px;
		@media (min-width: #{$maxWidthContainer + px}) {
			font-size: calc(
				#{$mobileSize + px} + #{$addSize} *
					((100vw - 320px) / #{$maxWidth - 320})
			);
		}
	} @else {
		//Всегда
		font-size: calc(
			#{$mobileSize + px} + #{$addSize} * ((100vw - 320px) / #{$maxWidth - 320})
		);
	}
}

// Адаптивное свойство
@mixin adaptiv-value($property, $startSize, $minSize, $type) {
	$addSize: $startSize - $minSize;

	@if $type==1 {

		//Только если меньше контейнера
		#{$property}: $startSize + px;
		@media (max-width: #{$maxWidthContainer + px}) {
			#{$property}: calc(
				#{$minSize + px} + #{$addSize} *
					((100vw - 320px) / #{$maxWidthContainer - 320})
			);
		}

	} @else if $type==2 {
		//Только если больше контейнера
		#{$property}: $startSize + px;
		@media (min-width: #{$maxWidthContainer + px}) {
			#{$property}: calc(
				#{$minSize + px} + #{$addSize} *
					((100vw - 320px) / #{$maxWidth - 320})
			);
		}
	} @else {
		//Всегда
		#{$property}: calc(
			#{$minSize + px} + #{$addSize} * ((100vw - 320px) / #{$maxWidth - 320})
		);
	}
}

// Адаптивное свойство ДО
@mixin adaptiv-value-to($property, $startSize, $minSize, $maxWidth) {
	$addSize: $startSize - $minSize;
	//#{$property}: $startSize + px;
	@media (max-width: #{$maxWidth + px}) {
		#{$property}: calc(
         #{$minSize + px} + #{$addSize} *
         ((100vw - 320px) / #{$maxWidth - 320})
   );
	}
}

// Размер в одну строку(@include size(80, 50);)
@mixin size($width, $height: $width) {
	width: #{$width + px};
	height: #{$height + ps};
}


// * MOBILE FIRST 
// Адаптивное свойство ОТ 
//! Для безконтейнерных сайтов заменить maxWidthContainer на maxWidth
@mixin adaptiv-value-by($property, $startSize, $maxSize, $minWidth) {
	$addSize: $maxSize - $startSize;
	//#{$property}: $startSize + px;
	@media (min-width: #{$minWidth + px}) {
		#{$property}: calc(
			#{$startSize + px} + #{$addSize} *
				(((100vw - #{$minWidth + px})) / ((#{$maxWidthContainer - $minWidth})))
		);
	}
}